<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.cosimogiani</groupId>
  <artifactId>museum</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>museum</name>


  <properties>
	<!-- Java 8 -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!-- Dependencies version -->
    <junit.version>4.13.1</junit.version>
    <assertj.swing.version>3.17.1</assertj.swing.version>
    <pitest.version>1.7.2</pitest.version>
    <mockito.version>4.0.0</mockito.version>
    
    <sonar.projectKey>default-project</sonar.projectKey>
    
    <sonar.issue.ignore.multicriteria>e1,e2</sonar.issue.ignore.multicriteria>
    <!-- Disable rule for "Local variable and method parameter names should comply 
      with a naming convention" in SwingView -->
    <sonar.issue.ignore.multicriteria.e1.ruleKey>
		java:S117
	</sonar.issue.ignore.multicriteria.e1.ruleKey>
	<sonar.issue.ignore.multicriteria.e1.resourceKey>
		**/SwingView.java
	</sonar.issue.ignore.multicriteria.e1.resourceKey>
	<!-- Disable rule for "Tests should include assertions":
	  SonarQube is not aware of AssertJ Swing -->
	<sonar.issue.ignore.multicriteria.e2.ruleKey>
		java:S2699
	</sonar.issue.ignore.multicriteria.e2.ruleKey>
	<sonar.issue.ignore.multicriteria.e2.resourceKey>
		**/SwingViewTest.java
	</sonar.issue.ignore.multicriteria.e2.resourceKey>
	
    <sonar.coverage.exclusions>
		**/model/*.*,
		**/app/swing/*.*
	</sonar.coverage.exclusions>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
		<groupId>org.assertj</groupId>
		<artifactId>assertj-swing-junit</artifactId>
		<version>${assertj.swing.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.mockito</groupId>
		<artifactId>mockito-core</artifactId>
		<version>${mockito.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.mongodb</groupId>
		<artifactId>mongo-java-driver</artifactId>
		<version>3.12.7</version>
	</dependency>
	<dependency>
		<!-- required to see Mongo Java Driver logs -->
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>1.2.3</version>
	</dependency>
	<dependency>
		<groupId>org.testcontainers</groupId>
		<artifactId>mongodb</artifactId>
		<version>1.15.1</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>info.picocli</groupId>
		<artifactId>picocli</artifactId>
		<version>4.6.1</version>
	</dependency>
  </dependencies>
  
  <build>
	  <plugins>
		  <plugin>
			  <groupId>org.codehaus.mojo</groupId>
			  <artifactId>build-helper-maven-plugin</artifactId>
			  <version>3.0.0</version>
			  <executions>
				  <execution>
					  <id>add-test-source</id>
					  <phase>generate-test-sources</phase>
					  <goals>
						  <goal>add-test-source</goal>
					  </goals>
					  <configuration>
						  <sources>
							  <source>src/it/java</source>
							  <source>src/e2e/java</source>
						  </sources>
					  </configuration>
				  </execution>
			  </executions>
		  </plugin>
		  <plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-failsafe-plugin</artifactId>
			  <version>2.22.1</version>
			  <executions>
				  <execution>
					  <id>default-it</id>
					  <goals>
						  <goal>integration-test</goal>
						  <goal>verify</goal>
					  </goals>
				  </execution>
				  <execution>
					  <id>e2e-tests</id>
					  <goals>
						  <goal>integration-test</goal>
						  <goal>verify</goal>
					  </goals>
					  <configuration>
						  <excludes>
							  <exclude>**/*IT.java</exclude>
						  </excludes>
						  <includes>
							  <include>**/*E2E.java</include>
						  </includes>
					  </configuration>
				  </execution>
			  </executions>
		  </plugin>
		  <plugin>
			  <groupId>io.fabric8</groupId>
			  <artifactId>docker-maven-plugin</artifactId>
			  <version>0.34.1</version>
			  <configuration>
				  <removeVolumes>true</removeVolumes>
				  <images>
					  <image>
						  <name>mongo:4.4.3</name>
						  <run>
							  <volumes>
								  <bind>
									  <volume>${project.basedir}/src/it/resources/docker:/setupReplicaSet</volume>
								  </bind>
							  </volumes>
							  <cmd>--replSet rs0</cmd>
							  <ports>
								  <port>27017:27017</port>
							  </ports>
							  <wait>
								  <time>30000</time>
								  <shutdown>5000</shutdown>
								  <kill>1000</kill>
								  <exec>
									  <postStart>sh /setupReplicaSet/setup.sh</postStart>
								  </exec>
							  </wait>
						  </run>
					  </image>
				  </images>
			  </configuration>
			  <executions>
				  <execution>
					  <id>docker-start</id>
					  <phase>pre-integration-test</phase>
					  <goals>
						  <goal>start</goal>
					  </goals>
				  </execution>
				  <execution>
					  <id>docker-stop</id>
					  <phase>post-integration-test</phase>
					  <goals>
						  <goal>stop</goal>
					  </goals>
				  </execution>
			  </executions>
		  </plugin>
	  </plugins>
	  
	  
	  <pluginManagement>
		  <plugins>
			  <plugin>
				  <groupId>org.jacoco</groupId>
				  <artifactId>jacoco-maven-plugin</artifactId>
				  <version>0.8.6</version>
				  <executions>
					  <execution>
						  <goals>
							  <goal>prepare-agent</goal>
							  <goal>report</goal>
						  </goals>
					  </execution>
				  </executions>
				  <configuration>
					  <excludes>
						  <exclude>**/model/*.*</exclude>
						  <exclude>**/app/swing/*.*</exclude>
					  </excludes>
				  </configuration>
			  </plugin>
			  <plugin>
				  <groupId>org.eluder.coveralls</groupId>
				  <artifactId>coveralls-maven-plugin</artifactId>
				  <version>4.3.0</version>
				  <dependencies>
					  <!-- This is required when using JDK 9 or higher since javax.xml.bind
					    has been removed from the JDK -->
					  <dependency>
						  <groupId>javax.xml.bind</groupId>
						  <artifactId>jaxb-api</artifactId>
						  <version>2.3.1</version>
					  </dependency>
				  </dependencies>
			  </plugin>
			  <plugin>
				  <artifactId>maven-surefire-report-plugin</artifactId>
				  <version>2.22.2</version>
			  </plugin>
			  <plugin>
				  <artifactId>maven-site-plugin</artifactId>
				  <version>3.9.1</version>
			  </plugin>
			  <plugin>
				  <groupId>org.sonarsource.scanner.maven</groupId>
				  <artifactId>sonar-maven-plugin</artifactId>
				  <version>3.9.0.2155</version>
			  </plugin>
			  <plugin>
				  <groupId>org.pitest</groupId>
				  <artifactId>pitest-maven</artifactId>
				  <version>${pitest.version}</version>
				  <configuration>
					  <excludedClasses>
						  <param>com.cosimogiani.museum.model.*</param>
						  <param>com.cosimogiani.museum.view.swing.*</param>
						  <param>com.cosimogiani.museum.app.swing.*</param>
					  </excludedClasses>
					  <targetTests>
						  <param>com.cosimogiani.museum.*</param>
					  </targetTests>
					  <excludedTestClasses>
						  <param>com.cosimogiani.museum.view.swing.*</param>
						  <param>**.*IT</param>
					  </excludedTestClasses>
					  <mutators>
						  <mutator>DEFAULTS</mutator>
					  </mutators>
					  <mutationThreshold>100</mutationThreshold>
				  </configuration>
			  </plugin>
		  </plugins>
	  </pluginManagement>
  </build>
  
  <profiles>
	  <profile>
		  <id>jacoco</id>
		  <build>
			  <plugins>
				  <plugin>
					  <groupId>org.jacoco</groupId>
					  <artifactId>jacoco-maven-plugin</artifactId>
				  </plugin>
			  </plugins>
		  </build>
	  </profile>
	  <profile>
		  <id>coveralls</id>
		  <build>
			  <plugins>
				  <plugin>
					  <groupId>org.jacoco</groupId>
					  <artifactId>jacoco-maven-plugin</artifactId>
				  </plugin>
				  <plugin>
					  <groupId>org.eluder.coveralls</groupId>
					  <artifactId>coveralls-maven-plugin</artifactId>
					  <executions>
						  <execution>
							  <phase>verify</phase>
							  <goals>
								  <goal>report</goal>
							  </goals>
						  </execution>
					  </executions>
				  </plugin>
			  </plugins>
		  </build>
	  </profile>
	  <profile>
		  <id>pit</id>
		  <build>
			  <plugins>
				  <plugin>
					  <groupId>org.pitest</groupId>
					  <artifactId>pitest-maven</artifactId>
					  <executions>
						  <execution>
							  <goals>
								  <goal>mutationCoverage</goal>
							  </goals>
							  <phase>verify</phase>
						  </execution>
					  </executions>
				  </plugin>
			  </plugins>
		  </build>
	  </profile>
  </profiles>
  
</project>
