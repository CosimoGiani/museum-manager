<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cosimogiani</groupId>
	<artifactId>museum</artifactId>
	<version>1.0.0</version>
	<name>museum</name>

	<properties>
		<!-- Java 8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- Dependencies versions -->
		<junit.version>4.13.1</junit.version>
		<assertj-swing.version>3.17.1</assertj-swing.version>
		<mockito.version>4.0.0</mockito.version>
		<mongo-java-driver.version>3.12.7</mongo-java-driver.version>
		<logback-classic.version>1.2.3</logback-classic.version>
		<testcontainers.version>1.15.1</testcontainers.version>
		<picocli.version>4.6.1</picocli.version>
		
		<!-- Plugins versions -->
		<build-helper.version>3.0.0</build-helper.version>
		<failsafe.version>2.22.1</failsafe.version>
		<docker.vesion>0.34.1</docker.vesion>
		<assembly.version>3.5.0</assembly.version>
		<jacoco.version>0.8.6</jacoco.version>
		<coveralls.version>4.3.0</coveralls.version>
		<jaxb-api.version>2.3.1</jaxb-api.version>
		<surefire-report.version>2.22.2</surefire-report.version>
		<site.version>3.9.1</site.version>
		<sonar.version>3.9.0.2155</sonar.version>
		<pitest.version>1.7.2</pitest.version>

		<sonar.projectKey>default-project</sonar.projectKey>

		<sonar.issue.ignore.multicriteria>e1,e2,e3</sonar.issue.ignore.multicriteria>
		<!-- Disable rule for "Local variable and method parameter names should comply 
			with a naming convention" in SwingView -->
		<sonar.issue.ignore.multicriteria.e1.ruleKey>
			java:S117
		</sonar.issue.ignore.multicriteria.e1.ruleKey>
		<sonar.issue.ignore.multicriteria.e1.resourceKey>
			**/SwingView.java
		</sonar.issue.ignore.multicriteria.e1.resourceKey>
		<!-- Disable rule for "Tests should include assertions": 
			SonarQube is not aware of AssertJ Swing -->
		<sonar.issue.ignore.multicriteria.e2.ruleKey>
			java:S2699
		</sonar.issue.ignore.multicriteria.e2.ruleKey>
		<sonar.issue.ignore.multicriteria.e2.resourceKey>
			**/SwingViewTest.java
		</sonar.issue.ignore.multicriteria.e2.resourceKey>
		<!-- Disable rule for "Tests classes should comply with a naming convention": 
			for end to end tests classes -->
		<sonar.issue.ignore.multicriteria.e3.ruleKey>
			java:S3577
		</sonar.issue.ignore.multicriteria.e3.ruleKey>
		<sonar.issue.ignore.multicriteria.e3.resourceKey>
			**/*E2E.java
		</sonar.issue.ignore.multicriteria.e3.resourceKey>
	
		<sonar.coverage.exclusions>
			**/model/*.*,
			**/app/swing/*.*
		</sonar.coverage.exclusions>
	</properties>

	<!-- Dependencies configurations -->
	<dependencies>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>
		<dependency>
			<!-- required to see Mongo Java Driver logs -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-classic.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo-java-driver.version}</version>
		</dependency>
		
		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj-swing.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Plugins configurations -->
	<build>
		<plugins>
			<!-- Configuration for the build-helper-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper.version}</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Configuration for the maven-failsafe-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${failsafe.version}</version>
				<executions>
					<execution>
						<id>default-it</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*IT.java</exclude>
							</excludes>
							<includes>
								<include>**/*E2E.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Configuration for the docker-maven-plugin -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.vesion}</version>
				<configuration>
					<removeVolumes>true</removeVolumes>
					<images>
						<image>
							<name>mongo:4.4.3</name>
							<run>
								<volumes>
									<bind>
										<volume>${project.basedir}/src/it/resources/docker:/setupReplicaSet</volume>
									</bind>
								</volumes>
								<cmd>--replSet rs0</cmd>
								<ports>
									<port>27017:27017</port>
								</ports>
								<wait>
									<time>30000</time>
									<shutdown>5000</shutdown>
									<kill>1000</kill>
									<exec>
										<postStart>sh /setupReplicaSet/setup.sh</postStart>
									</exec>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Configuration for the maven-assembly-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${assembly.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>com.cosimogiani.museum.app.swing.SwingApp</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	
		<pluginManagement>
			<plugins>
				<!-- Configuration for the jacoco-maven-plugin -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<excludes>
							<exclude>**/model/*.*</exclude>
							<exclude>**/app/swing/*.*</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- Configuration for the coveralls-maven-plugin -->
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls.version}</version>
					<dependencies>
						<!-- This is required when using JDK 9 or higher since javax.xml.bind 
							has been removed from the JDK -->
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>${jaxb-api.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- Configuration for the maven-surefire-report-plugin -->
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${surefire-report.version}</version>
				</plugin>
				<!-- Configuration for the maven-site-plugin -->
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>${site.version}</version>
				</plugin>
				<!-- Configuration for the sonar-maven-plugin -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.version}</version>
				</plugin>
				<!-- Configuration for the pitest-maven plugin -->
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pitest.version}</version>
					<configuration>
						<excludedClasses>
							<param>com.cosimogiani.museum.model.*</param>
							<param>com.cosimogiani.museum.view.swing.*</param>
							<param>com.cosimogiani.museum.app.swing.*</param>
						</excludedClasses>
						<targetTests>
							<param>com.cosimogiani.museum.*</param>
						</targetTests>
						<excludedTestClasses>
							<param>com.cosimogiani.museum.view.swing.*</param>
							<param>**.*IT</param>
							<param>**.*E2E</param>
						</excludedTestClasses>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
						<mutationThreshold>100</mutationThreshold>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- Profiles configurations -->
	<profiles>
		<!-- Configuration of jacoco profile for executing code coverage locally -->
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Configuration of coveralls profile for executing code coverage and
			sending the results to Coveralls -->
		<profile>
			<id>coveralls</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Configuration of PIT plugin for running mutation testing -->
		<profile>
			<id>pit</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
